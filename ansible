- name: veriable script
  hosts: all 
  vars: 
    URL: www.goggle.com
    CLI_URL: local.goggle.com
  tasks: 
   - name: task1 
     debug:
       msg: my url is  url {{URL}}
   - name: task 2
     debug:
       msg: url from cli {{CLI_URL}}
       
       
       
       script---2
       
       - name: veriable script
  hosts: all 
  vars_prompt:
    - name:  P_URL
      prompt: "enter p url value"
      private: no
  vars: 
    URL: www.goggle.com
  tasks: 
    - name: task1 
      debug:
        msg: my url is  url {{URL}}
      vars: 
        URL: local.google.com

    - name: task 2
      debug:
        msg: url from cli {{CLI_URL}}

    - name: task 3
      debug: 
        msg: prompt url {{P_URL}}     
        
        DEPLOYMENT 
        
        - name: Deployment
  hosts: all
  become: yes
  tasks:
    - name: Shut down tomcat
      shell: cd /opt/apache-tomcat-7.0.99/bin && ./shutdown.sh
      register: shutdown_tomcat
    - name: Tomcat shutdown logs
      debug:
        msg: "{{shutdown_tomcat}}"

    - name: backup of logs
      shell: tar -cvzf /opt/backup/`date +%M%H%d%b%Y`.tar.gz /opt/apache-tomcat-7.0.99/logs/catalina.out
      register: backup_logs
    - name: tomcat logs
      debug:
        msg: "{{backup_logs}}"
    - name: Remove war
      shell: rm -rf /opt/apache-tomcat-7.0.99/webapps/addressbook.war
    - name: Deploy war
      shell: cp -r /home/ubuntu/addressbook.war /opt/apache-tomcat-7.0.99/webapps/
    - name: Start Tomcat
      shell: cd /opt/apache-tomcat-7.0.99/bin && ./startup.sh
      register: tomcat_started
    - name: Tomcat log
      debug:
        msg: "{{tomcat_started}}"




installing httpd

- name: frist script
  hosts: devops
  become: yes 
  vars: 
    - server_port: 8080

  tasks: 
    - name: installing 
      yum: pkg=httpd state=installed

      notify:
        - restart httpd   
  handlers:
    - name: restart httpd
      service: name=httpd state=restarted

       
       
       
       
       
       httpd install check status
       
       
       
       
       - name: frist task
  hosts: all
  become: yes
  tasks:
    - name: installing httpd
      yum:
        name: httpd
        state: present

    - name: status
      shell: systemctl status httpd
      register: httpd_status

    - name: httpd status check
      debug:
        msg: "{{httpd_status.stdout_lines}}"
    
    - name: copy file
      copy: 
        src: index.html 
        dest: /var/www/html/




-----when condition-----



- name: when condition
  hosts: all
  become: yes
  tasks:
    - name: installing when os is ubuntu
      debug:
        msg: node os is {{ansible_distribution}}

    - name: install when os is centos
      debug:
        msg: node os is {{ansible_distribution}}


note:
Sometimes you will want to skip a particular step on a particular host.
This could be something as simple as not installing a certain package if the operating system is a particular version,
or it could be something like performing some cleanup steps if a filesystem is getting full.
This is easy to do in Ansible with the when clause, which contains a raw Jinja2 expression without double curly braces (see group_by – Create Ansible groups based on facts). It’s actually pretty simple













    
